/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package nimgame.view;

import java.awt.*;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.*;
import javax.swing.border.Border;
import nimgame.controller.NIM_Control_1Player;
import nimgame.controller.NIM_Control_2Player;
/**
 *
 * @author Admin
 */
public class Start_UI extends javax.swing.JFrame {
//    private JLabel[][] labelArray;
//    public void setLabelArray(JLabel[][] labelArray){
//        this.labelArray = labelArray;
//    }
    private static Start_UI instance;
    
    /**
     * Creates new form NIM_UI
     */
    public Start_UI() {
        initComponents();   
//        startButton.setText(test_i);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PickModePanel = new javax.swing.JPanel();
        GuideLabel = new javax.swing.JLabel();
        NumPlayer = new javax.swing.JLabel();
        onePlayerBtn = new javax.swing.JButton();
        twoPlayerBtn = new javax.swing.JButton();
        ModeLabel = new javax.swing.JLabel();
        backGround2 = new javax.swing.JLabel();
        TipsPanel = new javax.swing.JPanel();
        Tips_Rev = new javax.swing.JButton();
        Tips_Next = new javax.swing.JButton();
        Tips1_ScrollPane = new javax.swing.JScrollPane();
        Tips1_TextArea = new javax.swing.JTextArea();
        illustration = new javax.swing.JLabel();
        TipsLabel = new javax.swing.JLabel();
        bgTextLabel = new javax.swing.JLabel();
        backGround1 = new javax.swing.JLabel();
        StartMenuPanel = new javax.swing.JPanel();
        stoneIcon = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        tipsButton = new javax.swing.JButton();
        backGround = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NIM GAME");
        setLocation(new java.awt.Point(550, 250));
        setMinimumSize(new java.awt.Dimension(850, 550));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        GuideLabel.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        GuideLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GuideLabel.setText("How to play?");
        GuideLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GuideLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                GuideLabelMouseEntered(evt);
            }
        });

        NumPlayer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        onePlayerBtn.setFont(new java.awt.Font("Futura Bk", 1, 24)); // NOI18N
        onePlayerBtn.setText("One Player");
        onePlayerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                onePlayerBtnMouseEntered(evt);
            }
        });
        onePlayerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onePlayerBtnActionPerformed(evt);
            }
        });

        twoPlayerBtn.setFont(new java.awt.Font("Futura Bk", 1, 24)); // NOI18N
        twoPlayerBtn.setText("Two Players");
        twoPlayerBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                twoPlayerBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                twoPlayerBtnMouseEntered(evt);
            }
        });

        ModeLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        ModeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ModeLabel.setText("GAME MODE");

        backGround2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/bgImage.jpg"))); // NOI18N

        javax.swing.GroupLayout PickModePanelLayout = new javax.swing.GroupLayout(PickModePanel);
        PickModePanel.setLayout(PickModePanelLayout);
        PickModePanelLayout.setHorizontalGroup(
            PickModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(270, 270, 270)
                .addComponent(ModeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(GuideLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(onePlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(430, 430, 430)
                .addComponent(twoPlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(NumPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(backGround2, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        PickModePanelLayout.setVerticalGroup(
            PickModePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(ModeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(470, 470, 470)
                .addComponent(GuideLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(onePlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addComponent(twoPlayerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PickModePanelLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(NumPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(backGround2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        getContentPane().add(PickModePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 550));
        PickModePanel.setVisible(false);

        TipsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Tips_Rev.setFont(new java.awt.Font("Proxy 4", 1, 36)); // NOI18N
        Tips_Rev.setText("<");
        Tips_Rev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tips_RevActionPerformed(evt);
            }
        });
        TipsPanel.add(Tips_Rev, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 470, 60, 50));

        Tips_Next.setFont(new java.awt.Font("Proxy 4", 1, 36)); // NOI18N
        Tips_Next.setText(">");
        Tips_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tips_NextActionPerformed(evt);
            }
        });
        TipsPanel.add(Tips_Next, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 470, 60, 50));

        Tips1_ScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        Tips1_ScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        Tips1_ScrollPane.setPreferredSize(new java.awt.Dimension(500, 80));

        Tips1_TextArea.setEditable(false);
        Tips1_TextArea.setBackground(new java.awt.Color(255, 255, 255));
        Tips1_TextArea.setColumns(20);
        Tips1_TextArea.setFont(new java.awt.Font("Sitka Heading", 1, 18)); // NOI18N
        Tips1_TextArea.setLineWrap(true);
        Tips1_TextArea.setRows(5);
        Tips1_TextArea.setEditable(false);
        Tips1_TextArea.setText("Trò chơi NIM cơ bản bắt đầu với hai người chơi và một số đống (heap) các viên đá (hoặc que diêm).");
        Tips1_TextArea.setWrapStyleWord(true);
        Tips1_TextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Tips1_TextArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Tips1_TextArea.setEnabled(false);
        Tips1_ScrollPane.setViewportView(Tips1_TextArea);

        Tips1_ScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        TipsPanel.add(Tips1_ScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 350, 590, 100));

        illustration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/tips1.png"))); // NOI18N
        TipsPanel.add(illustration, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, -1, -1));

        TipsLabel.setFont(new java.awt.Font("Swis721 BlkEx BT", 1, 24)); // NOI18N
        TipsLabel.setForeground(new java.awt.Color(153, 51, 0));
        TipsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TipsLabel.setText("How To Play?");
        TipsLabel.setToolTipText("");
        TipsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TipsPanel.add(TipsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 270, 90));

        bgTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgTextLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/bg_text.png"))); // NOI18N
        TipsPanel.add(bgTextLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 0, 380, 140));

        backGround1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/bgImage.jpg"))); // NOI18N
        TipsPanel.add(backGround1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 550));

        getContentPane().add(TipsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 550));
        TipsPanel.setVisible(false);

        StartMenuPanel.setBackground(new java.awt.Color(255, 255, 255));
        StartMenuPanel.setMaximumSize(new java.awt.Dimension(100, 100));
        StartMenuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stoneIcon.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        stoneIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/spa-stones.1.1.png"));
        Image image = icon.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        ImageIcon resized = new ImageIcon(image);
        stoneIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/spa-stones.1.1.png"))); // NOI18N
        stoneIcon.setPreferredSize(new java.awt.Dimension(50, 50));
        StartMenuPanel.add(stoneIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, 70, 60));

        nameLabel.setBackground(new java.awt.Color(255, 204, 51));
        nameLabel.setFont(new java.awt.Font("Artifakt Element Black", 3, 36)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(20, 61, 89));
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText(" Nim Game ");
        nameLabel.setToolTipText("");
        nameLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        Border border = BorderFactory.createLineBorder(Color.BLACK, 5);
        nameLabel.setBorder(BorderFactory.createCompoundBorder(border, BorderFactory.createEmptyBorder(10,10,10,10)));
        nameLabel.setOpaque(true);
        StartMenuPanel.add(nameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 20, -1, 110));

        exitButton.setBackground(new java.awt.Color(153, 255, 153));
        exitButton.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        StartMenuPanel.add(exitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 370, 190, 50));

        startButton.setBackground(new java.awt.Color(255, 153, 153));
        startButton.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        startButton.setText("START");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });
        StartMenuPanel.add(startButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 190, 50));

        tipsButton.setBackground(new java.awt.Color(255, 255, 153));
        tipsButton.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        tipsButton.setText("TIPS");
        tipsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipsButtonActionPerformed(evt);
            }
        });
        StartMenuPanel.add(tipsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 190, 50));

        backGround.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nimgame/view/images/bgImage.jpg"))); // NOI18N
        StartMenuPanel.add(backGround, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 550));

        getContentPane().add(StartMenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        //StartMenuPanel.setVisible(false);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    // **START PANEL ACTION**
    private void tipsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipsButtonActionPerformed
        StartMenuPanel.setVisible(false);
        TipsPanel.setVisible(true);
        tips_i = 0;
        Tips1_TextArea.setText(tips[0]);
        illustration.setIcon(imageList.get(0));
    }//GEN-LAST:event_tipsButtonActionPerformed

    // END START PANEL ACTION
    
    // **TIPS PANEL ACTION**
    int tips_i = 0;
    String[] tips = {
        "Trò chơi NIM cơ bản bắt đầu với hai người chơi và một số đống (heap) các viên sỏi (hoặc que diêm).",
        "Hai người chơi sẽ lần lượt thực hiện nước đi của mình bằng cách bốc một số lượng viên sỏi bất kỳ từ một trong các đống sỏi còn lại trên bàn (lấy ít nhất một viên).",
        "Người chơi nào lấy được viên sỏi cuối cùng trên bàn sẽ là người chiến thắng."
    };
    // Tạo danh sách các hình ảnh
    ArrayList<ImageIcon> imageList = new ArrayList<>(Arrays.asList(
            new ImageIcon(getClass().getResource("/nimgame/view/images/tips1.png")),
            new ImageIcon(getClass().getResource("/nimgame/view/images/tips2.png")),
            new ImageIcon(getClass().getResource("/nimgame/view/images/tips3.png"))
    ));
    
    private void Tips_RevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tips_RevActionPerformed
        if (tips_i == 0) {
            TipsPanel.setVisible(false);
            StartMenuPanel.setVisible(true);
        } else if (tips_i != 0) {
            Tips1_TextArea.setText(tips[tips_i - 1]);
            illustration.setIcon(imageList.get(tips_i - 1));
            tips_i--;
        }
    }//GEN-LAST:event_Tips_RevActionPerformed

    private void Tips_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tips_NextActionPerformed
        if (tips_i == 2) {
            int opt = JOptionPane.showConfirmDialog(this, "Hãy bắt đầu chơi để hiểu rõ hơn nhé!", "Thông báo", JOptionPane.OK_CANCEL_OPTION);
            if(opt == JOptionPane.OK_OPTION){
                TipsPanel.setVisible(false);
                StartMenuPanel.setVisible(true);
            }
        } else {
            Tips1_TextArea.setText(tips[tips_i + 1]);
            illustration.setIcon(imageList.get(tips_i + 1));
            tips_i++;
        }
    }//GEN-LAST:event_Tips_NextActionPerformed

    private void onePlayerBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onePlayerBtnMouseEntered
        NumPlayer.setText(null);
        NumPlayer.setIcon(new ImageIcon(getClass().getResource("/nimgame/view/images/1player.png")));
    }//GEN-LAST:event_onePlayerBtnMouseEntered

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        StartMenuPanel.setVisible(false);
        PickModePanel.setVisible(true);
    }//GEN-LAST:event_startButtonActionPerformed

    private void twoPlayerBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoPlayerBtnMouseEntered
        NumPlayer.setText(null);
        NumPlayer.setIcon(new ImageIcon(getClass().getResource("/nimgame/view/images/2player.png")));
    }//GEN-LAST:event_twoPlayerBtnMouseEntered
        
    private void GuideLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuideLabelMouseEntered
        NumPlayer.setIcon(null);
        NumPlayer.setFont(new Font("Verdana", Font.BOLD, 24));
        NumPlayer.setText("Click to read tips!");
//        Font originalFont = GuideLabel.getFont();
//        GuideLabel.setFont(new Font(originalFont.getFontName(), Font.BOLD, originalFont.getSize()));
    }//GEN-LAST:event_GuideLabelMouseEntered

    private void GuideLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GuideLabelMouseClicked
        PickModePanel.setVisible(false);
        TipsPanel.setVisible(true);
        tips_i = 0;
        Tips1_TextArea.setText(tips[0]);
        illustration.setIcon(imageList.get(0));
    }//GEN-LAST:event_GuideLabelMouseClicked

    private void twoPlayerBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_twoPlayerBtnMouseClicked
        //TwoPlayer ui2p = new TwoPlayer();
        //TwoPlayer.getInstance();
        new NIM_Control_2Player();
        this.setVisible(false);
    }//GEN-LAST:event_twoPlayerBtnMouseClicked

    private void onePlayerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onePlayerBtnActionPerformed
        new NIM_Control_1Player();
        this.setVisible(false);
    }//GEN-LAST:event_onePlayerBtnActionPerformed
 
    public static synchronized Start_UI getInstance() {
        if (instance == null) {
            instance = new Start_UI();
            instance.setVisible(true);
        }
        else instance.setVisible(true);
        return instance;
    }
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Start_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Start_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Start_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Start_UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new Start_UI().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel GuideLabel;
    private javax.swing.JLabel ModeLabel;
    private javax.swing.JLabel NumPlayer;
    private javax.swing.JPanel PickModePanel;
    private javax.swing.JPanel StartMenuPanel;
    private javax.swing.JScrollPane Tips1_ScrollPane;
    private javax.swing.JTextArea Tips1_TextArea;
    private javax.swing.JLabel TipsLabel;
    private javax.swing.JPanel TipsPanel;
    private javax.swing.JButton Tips_Next;
    private javax.swing.JButton Tips_Rev;
    private javax.swing.JLabel backGround;
    private javax.swing.JLabel backGround1;
    private javax.swing.JLabel backGround2;
    private javax.swing.JLabel bgTextLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel illustration;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton onePlayerBtn;
    private javax.swing.JButton startButton;
    private javax.swing.JLabel stoneIcon;
    private javax.swing.JButton tipsButton;
    private javax.swing.JButton twoPlayerBtn;
    // End of variables declaration//GEN-END:variables
    
}
